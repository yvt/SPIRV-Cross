#pragma clang diagnostic ignored "-Wmissing-prototypes"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct Struct
{
    int field1;
    int field2;
};

struct main0_workgroup
{
    int simpleVar;
    int arrayVar[42];
    Struct aosVar[6];
    Struct structVar;
    float4x4 matVar;
};

void test(threadgroup int& simpleVar, threadgroup int (&arrayVar)[42], threadgroup Struct (&aosVar)[6], threadgroup Struct& structVar, threadgroup float4x4& matVar)
{
    simpleVar = 1;
    arrayVar[0] = 2;
    aosVar[3].field1 = 4;
    aosVar[5].field2 = 6;
    structVar.field1 = 7;
    structVar.field1 = 8;
    Struct s = aosVar[0];
    aosVar[1] = s;
    matVar = float4x4(float4(1.0, 0.0, 0.0, 0.0), float4(0.0, 1.0, 0.0, 0.0), float4(0.0, 0.0, 1.0, 0.0), float4(0.0, 0.0, 0.0, 1.0));
}

kernel void main0(uint gl_LocalInvocationIndex [[thread_index_in_threadgroup]])
{
    threadgroup main0_workgroup workgroup = {};
    if (gl_LocalInvocationIndex == 0u)
    {
        workgroup.simpleVar = 1;
        test(workgroup.simpleVar, workgroup.arrayVar, workgroup.aosVar, workgroup.structVar, workgroup.matVar);
        workgroup.arrayVar[0] = 2;
        workgroup.aosVar[3].field1 = 4;
        workgroup.aosVar[5].field2 = 6;
        workgroup.structVar.field1 = 7;
        workgroup.structVar.field1 = 8;
        Struct s = workgroup.aosVar[0];
        workgroup.aosVar[1] = s;
        workgroup.matVar = float4x4(float4(1.0, 0.0, 0.0, 0.0), float4(0.0, 1.0, 0.0, 0.0), float4(0.0, 0.0, 1.0, 0.0), float4(0.0, 0.0, 0.0, 1.0));
    }
}

